import { AfterViewInit, EventEmitter, OnInit } from '@angular/core';
import {  EmojiCategory } from '@ctrl/ngx-emoji-mart/ngx-emoji/data/data.interfaces';
import { Emoji } from '@ctrl/ngx-emoji-mart/ngx-emoji/emoji.component';
import {  EmojiEvent } from '@ctrl/ngx-emoji-mart/ngx-emoji/emoji.component';
import { EmojiFrequentlyService } from './emoji-frequently.service';
export declare class PickerComponent implements OnInit, AfterViewInit {
    private frequently;
    perLine: number;
    i18n: any;
    style: any;
    title: string;
    emoji: string;
    color: string;
    hideObsolete: boolean;
    categories: any[];
    set: Emoji['set'];
    skin: Emoji['skin'];
    native: Emoji['native'];
    emojiSize: Emoji['size'];
    sheetSize: Emoji['sheetSize'];
    emojisToShowFilter?: (x: string) => boolean;
    showPreview: boolean;
    emojiTooltip: boolean;
    autoFocus: boolean;
    custom: any[];
    hideRecent: boolean;
    include: string[];
    exclude: string[];
    emojiClick: EventEmitter<any>;
    private scrollRef?;
    private previewRef?;
    private categoryRefs?;
    scrollHeight: number;
    clientHeight: number;
    selected?: string;
    scrollTop?: number;
    firstRender: boolean;
    RECENT_CATEGORY: {
        id: string;
        name: string;
        emojis: any;
    };
    CUSTOM_CATEGORY: {
        id: string;
        name: string;
        emojis: any[];
    };
    recent?: string[];
    previewEmoji: any;
    leaveTimeout: any;
    NAMESPACE: string;
    measureScrollbar: number;
    backgroundImageFn: Emoji['backgroundImageFn'];
    constructor(frequently: EmojiFrequentlyService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    updateCategoriesSize(): void;
    handleAnchorClick($event: {
        category: EmojiCategory;
        index: number;
    }): void;
    categoryTrack(index: number, item: any): any;
    handleScroll(): void;
    handleSearch($emojis: any): void;
    handleEmojiOver($event: EmojiEvent): void;
    handleEmojiLeave($event: EmojiEvent): void;
    handleEmojiClick($event: EmojiEvent): void;
    handleSkinChange(skin: Emoji['skin']): void;
}
